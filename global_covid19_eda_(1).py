# -*- coding: utf-8 -*-
"""Global_Covid19_EDA_(1).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1efUhfWcaD_hn1Owf6ALXQMPY_qret-68
"""

!pip install pandas numpy matplotlib seaborn
!pip install mysql-connector-python sqlalchemy pandas
!pip install plotly

# === Setup Cell ===
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px
import mysql.connector

# Display settings
pd.set_option("display.max_columns", None)
pd.set_option("display.max_rows", 50)

# === MySQL Connection ===
try:
    conn = mysql.connector.connect(
        host="localhost",
        user="root",
        password="******",   #  your password
        database="Covid19",    # your database
        allow_local_infile=True
    )
    cur = conn.cursor()
    print("‚úÖ MySQL connection successful")
except Exception as e:
    print("‚ùå Error connecting to MySQL:", e)

"""## Introduction
This analysis uses the Kaggle dataset *corona-virus-report*, covering COVID-19 data from **Jan 22, 2020 to Jul 27, 2020**.  
The goal is to explore **global trends, country-level patterns, fatality and recovery rates, and regional differences**.

## Total global deaths due to Covid19:
"""

query="""SELECT SUM(latest_deaths) AS total_global_deaths
FROM (
    SELECT `Country/Region`, MAX(Deaths) AS latest_deaths
    FROM covid19cleancomplete
    GROUP BY `Country/Region`
) AS t;"""
cur.execute(query)

data = cur.fetchall()
data

"""## Trend of Global COVID-19 Deaths Over Time:"""

query = """
SELECT `Date`,
       SUM(Confirmed) AS total_confirmed,
       SUM(Deaths) AS total_deaths,
       SUM(Recovered) AS total_recovered,
       SUM(Active) AS total_active
FROM covid19cleancomplete
GROUP BY `Date`
ORDER BY STR_TO_DATE(`Date`, '%m/%d/%Y');
"""

cur.execute(query)
data = cur.fetchall()

# ‚úÖ Correct column mapping
df = pd.DataFrame(data, columns=["Date", "total_confirmed", "total_deaths", "total_recovered", "total_active"])

# ‚úÖ Convert Date to datetime
df["Date"] = pd.to_datetime(df["Date"])

# ‚úÖ Line plot
plt.figure(figsize=(12,6))
plt.plot(df["Date"], df["total_deaths"], color="red", linewidth=2, label="Total Deaths")

plt.ylabel("Total Deaths")
plt.xlabel("Date")
plt.title("Global COVID-19 Deaths Over Time", fontsize=14, fontweight="bold")
plt.xticks(rotation=45, ha="right")
plt.legend()
plt.tight_layout()
plt.show()

"""### Insight
Global deaths increased rapidly from **March 2020**, peaking in growth during **April‚ÄìMay 2020**.  
By July 2020, total global deaths had crossed **X hundred thousand**.

## Top 10 Countries by Total COVID-19 Deaths:
"""

query = """
SELECT `Country/Region`,
       MAX(Deaths) AS total_deaths
FROM covid19cleancomplete
GROUP BY `Country/Region`
ORDER BY total_deaths DESC
LIMIT 10;
"""

cur.execute(query)
data = cur.fetchall()

df = pd.DataFrame(data, columns=["Country/Region", "total_deaths"])

# Plot with Seaborn
plt.figure(figsize=(10,5))
ax = sns.barplot(x="Country/Region", y="total_deaths", data=df, color="crimson")  # ‚úÖ fixed

plt.ylabel("Total Deaths")
plt.xlabel("Country/Region")
plt.title("Top 10 Countries - Total Deaths", fontsize=14, fontweight="bold")

# Add values on top of bars
for p in ax.patches:
    ax.annotate(f"{p.get_height():,.0f}",   # formatted with commas, no decimals
                (p.get_x() + p.get_width() / 2., p.get_height()),
                ha="center", va="bottom", fontsize=9, color="black", xytext=(0, 3),
                textcoords="offset points")

plt.xticks(rotation=45, ha="right")
plt.tight_layout()
plt.show()

"""### Insight
The United States, Brazil, and Mexico had the highest total deaths during this period.

## Country-Wise CFR Analysis:
"""

query="""SELECT `Country/Region`,
       MAX(Confirmed) AS total_cases,
       MAX(Deaths) AS total_deaths,
       (MAX(Deaths)/NULLIF(MAX(Confirmed),0))*100 AS fatality_rate
FROM covid19cleancomplete
GROUP BY `Country/Region`
ORDER BY total_deaths DESC
LIMIT 10;"""

cur.execute(query)
data = cur.fetchall()
data



df = pd.DataFrame(data, columns=["Country/Region", "total_cases", "total_deaths", "fatality_rate"])

df = df.sort_values("fatality_rate", ascending=False).head(10)

plt.figure(figsize=(12,6))
ax = sns.barplot(
    x="Country/Region",
    y="fatality_rate",
    data=df,
    hue="Country/Region",     # ‚úÖ assign hue to fix warning
    palette="Reds_r",
    legend=False              # ‚úÖ no duplicate legend
)

# Add values on top of bars
for p in ax.patches:
    ax.annotate(f"{p.get_height():.2f}%",   # 2 decimal places
                (p.get_x() + p.get_width() / 2., p.get_height()),
                ha="center", va="bottom", fontsize=9, color="black", xytext=(0, 3),
                textcoords="offset points")

plt.ylabel("Fatality Rate (%)")
plt.xlabel("Country")
plt.title("Top 10 Countries by Case Fatality Rate", fontsize=14, fontweight="bold")
plt.xticks(rotation=45, ha="right")
plt.tight_layout()
plt.show()
S

"""### Insights
Even though the number of deaths is higher in the US in terms of fatality rate, the UK has the highest.

## WHO regional fatality rate%:
"""

query = """
SELECT WHO_Region,
       SUM(latest_deaths) AS total_deaths,
       SUM(latest_confirmed) AS total_cases,
       (SUM(latest_deaths) / NULLIF(SUM(latest_confirmed),0)) * 100 AS fatality_rate
FROM (
    SELECT WHO_Region, `Country/Region`,
           MAX(Deaths) AS latest_deaths,
           MAX(Confirmed) AS latest_confirmed
    FROM covid19cleancomplete
    GROUP BY WHO_Region, `Country/Region`
) AS t
GROUP BY WHO_Region
ORDER BY fatality_rate DESC
LIMIT 10;
"""

cur.execute(query)
data = cur.fetchall()

# ‚úÖ Correct column mapping
df = pd.DataFrame(data, columns=["WHO_Region", "total_deaths", "total_cases", "fatality_rate"])

plt.figure(figsize=(12,6))
ax = sns.barplot(
    x="WHO_Region",
    y="fatality_rate",
    data=df,
    hue="WHO_Region",     # ‚úÖ match existing column
    palette="Reds_r",
    legend=False
)

# ‚úÖ Add values on bars
for p in ax.patches:
    ax.annotate(f"{p.get_height():.2f}%",
                (p.get_x() + p.get_width() / 2., p.get_height()),
                ha="center", va="bottom", fontsize=9, color="black", xytext=(0, 3),
                textcoords="offset points")

plt.ylabel("Fatality Rate (%)")
plt.xlabel("WHO Region")
plt.title("Case Fatality Rate by WHO Region", fontsize=14, fontweight="bold")
plt.xticks(rotation=45, ha="right")
plt.tight_layout()
plt.show()

"""### Insight
The European Region reported the **highest fatality rates**, while the South-East Asia Region showed relatively lower fatality and higher recovery.  
Regional variations reflect differences in healthcare, demographics, and reporting.

## Global trends of fatality, recovery and active cases:
"""

query="""SELECT `Date`,
       (SUM(Deaths) / NULLIF(SUM(Confirmed),0)) * 100 AS fatality_rate,
       (SUM(Recovered) / NULLIF(SUM(Confirmed),0)) * 100 AS recovery_rate,
       (SUM(Active) / NULLIF(SUM(Confirmed),0)) * 100 AS active_rate
FROM covid19cleancomplete
GROUP BY `Date`
ORDER BY STR_TO_DATE(`Date`, '%m/%d/%Y');"""


cur.execute(query)
data = cur.fetchall()

# Build DataFrame
df_rates = pd.DataFrame(data, columns=["Date", "fatality_rate", "recovery_rate", "active_rate"])
df_rates["Date"] = pd.to_datetime(df_rates["Date"])

# Line plot
plt.figure(figsize=(12,6))
plt.plot(df_rates["Date"], df_rates["fatality_rate"], color="red", linewidth=2, label="Fatality Rate (%)")
plt.plot(df_rates["Date"], df_rates["recovery_rate"], color="green", linewidth=2, label="Recovery Rate (%)")
plt.plot(df_rates["Date"], df_rates["active_rate"], color="blue", linewidth=2, label="Active Case Rate (%)")

plt.ylabel("Rate (%)")
plt.xlabel("Date")
plt.title("Global Fatality, Recovery, and Active Case Rates Over Time", fontsize=14, fontweight="bold")
plt.xticks(rotation=45, ha="right")
plt.legend()
plt.tight_layout()
plt.show()

"""### Insight
Fatality Rate stabilized at around **3‚Äì5%** by mid-2020.  
Recovery Rate steadily increased and crossed **50% by June 2020**.  
Active cases declined gradually as recoveries accumulated.

## Geographic Map
"""

import plotly.express as px
import plotly.io as pio
pio.renderers.default = "notebook"

query="""SELECT `Country/Region`,
       MAX(Confirmed) AS total_confirmed,
       MAX(Deaths) AS total_deaths,
       MAX(Recovered) AS total_recovered,
       MAX(Lat) AS Lat,
       MAX(`Long`) AS Lon
FROM covid19cleancomplete
GROUP BY `Country/Region`;"""

cur.execute(query)
data = cur.fetchall()

# DataFrame
df_geo = pd.DataFrame(data, columns=["Country", "total_confirmed", "total_deaths", "total_recovered", "Lat", "Lon"])

# Calculate CFR (Case Fatality Rate)
df_geo["CFR"] = (df_geo["total_deaths"] / df_geo["total_confirmed"]) * 100

# Bubble map
fig = px.scatter_geo(
    df_geo,
    lat="Lat",
    lon="Lon",
    hover_name="Country",
    size="total_confirmed",       # Bubble size = confirmed cases
    color="CFR",                  # Bubble color = fatality rate
    projection="natural earth",
    color_continuous_scale="Reds",
    title="üåç COVID-19 Global Map: Bubble Size = Confirmed, Color = Fatality Rate"
)

fig.show()

"""## Top Countries Dashboard: Confirmed Cases, Deaths, Fatality Rate, and Recovery Rate"""

query = """SELECT `Country/Region`,
       MAX(Confirmed) AS total_confirmed,
       MAX(Deaths) AS total_deaths,
       NULLIF(MAX(Recovered),0) AS total_recovered,   -- üëà turn 0 into NULL
       (MAX(Deaths) / NULLIF(MAX(Confirmed),0)) * 100 AS fatality_rate,
       (NULLIF(MAX(Recovered),0) / NULLIF(MAX(Confirmed),0)) * 100 AS recovery_rate
FROM covid19cleancomplete
GROUP BY `Country/Region`
ORDER BY total_confirmed DESC
LIMIT 8;

"""


cur.execute(query)
data = cur.fetchall()


df_top8 = pd.DataFrame(data, columns=["Country", "total_confirmed", "total_deaths", "total_recovered", "fatality_rate", "recovery_rate"])

fig, axes = plt.subplots(2, 2, figsize=(14,10))

# Confirmed (blue solid)
sns.barplot(x="total_confirmed", y="Country", data=df_top8, color="steelblue", ax=axes[0,0])
axes[0,0].set_title("Top Countries - Confirmed Cases")

# Deaths (red solid)
sns.barplot(x="total_deaths", y="Country", data=df_top8, color="firebrick", ax=axes[0,1])
axes[0,1].set_title("Top Countries - Deaths")

# Fatality Rate (purple solid)
sns.barplot(x="fatality_rate", y="Country", data=df_top8, color="indigo", ax=axes[1,0])
axes[1,0].set_title("Top Countries - Fatality Rate (%)")

# Recovery Rate (green solid)
sns.barplot(x="recovery_rate", y="Country", data=df_top8, color="seagreen", ax=axes[1,1])
axes[1,1].set_title("Top Countries - Recovery Rate (%)")

plt.tight_layout()
plt.show()

"""## WHO regional recovery"""

query="""SELECT WHO_Region,
       SUM(latest_recovered) AS total_recovered,
       SUM(latest_confirmed) AS total_cases,
       (SUM(latest_recovered) / NULLIF(SUM(latest_confirmed),0)) * 100 AS recovery_rate
FROM (
    SELECT WHO_Region, `Country/Region`,
           MAX(Recovered) AS latest_recovered,
           MAX(Confirmed) AS latest_confirmed
    FROM covid19cleancomplete
    GROUP BY WHO_Region, `Country/Region`
) AS t
GROUP BY WHO_Region
ORDER BY recovery_rate DESC
LIMIT 10;"""

cur.execute(query)
data = cur.fetchall()
data


df = pd.DataFrame(data, columns=["WHO_Region", "total_recoverd", "total_cases", "recovery_rate"])

plt.figure(figsize=(12,6))
ax = sns.barplot(x="WHO_Region", y="recovery_rate", data=df, hue="WHO_Region", palette="Reds_r", legend=False)

# ‚úÖ Add values on bars
for p in ax.patches:
    ax.annotate(f"{p.get_height():.2f}%",
                (p.get_x() + p.get_width() / 2., p.get_height()),
                ha="center", va="bottom", fontsize=9, color="black", xytext=(0, 3),
                textcoords="offset points")

plt.ylabel("Recovery rate (%)")
plt.xlabel("WHO Region")
plt.title("Recovery Rate by WHO Region", fontsize=14, fontweight="bold")
plt.xticks(rotation=45, ha="right")
plt.tight_layout()
plt.show()

"""### Insight
The Eastern Mediterranean showed the highest regional recovery rates,

# ü¶† Global COVID-19 Exploratory Data Analysis summary:

## üìå
This project analyzes global COVID-19 data from the Kaggle dataset covering the period **January 22, 2020 to July 27, 2020**.  

The analysis combines **SQL queries** and **Python visualizations** to uncover global, country-level, and regional patterns in confirmed cases, deaths, recoveries, and outcome rates.

---

## üåç Global Overview
- **First recorded date:** January 22, 2020  
- **Last recorded date:** July 27, 2020  
- By July 2020, **global deaths surpassed 650,000**, reflecting the rapid spread of the pandemic.  
- **Cumulative deaths trend** showed a sharp rise in March‚ÄìApril 2020, followed by a steady upward trajectory.

üìä *Insight:* Global fatalities accelerated quickly during the first wave, peaking in growth during spring 2020.

---

## üè≥ Country-Level Analysis
### Top 10 Countries by Deaths
- The **United States** reported the highest number of deaths, followed by **Brazil** and **India**.
- Other countries in the top 10 included Russia, Mexico, Peru, Chile, South Africa, and the UK.  

üìä *Insight:* The Americas (North & South) dominated both confirmed cases and deaths.

### Case Fatality Rate (CFR)
- **Mexico** showed the highest CFR (>10%), indicating severe outcomes.  
- **India, Russia, and South Africa** had relatively lower CFRs.  

üìä *Insight:* CFR values varied significantly, reflecting healthcare capacity and testing/reporting practices.

### Recovery Rate
- Countries like **Chile and Peru** showed recovery rates above **80%**.  
- Recovery data was **not reported** for some countries (e.g., the UK).  

üìä *Insight:* Recovery reporting inconsistencies highlight data quality issues.

---

## üìà Global Rate Trends
- **Fatality Rate (CFR):** Stabilized at around **3‚Äì5%** by mid-2020.  
- **Recovery Rate:** Showed strong upward momentum, crossing **50% by June 2020**.  
- **Active Cases:** Declined gradually as more patients recovered.

üìä *Insight:* While deaths continued to rise, recovery trends provided early signs of improved patient outcomes.

---

## üåê Regional (WHO) Analysis
- **Europe** reported the highest CFR among WHO regions.  
- **Asia** demonstrated relatively lower fatality and stronger recovery rates.  
- Regional variations were influenced by demographics, healthcare systems, and data reporting standards.  

üìä *Insight:* Europe bore the heaviest toll in terms of mortality, while Asia showed resilience in outcomes.

---

## üó∫ Geographic Analysis
- A global **bubble map** (size = confirmed cases, color = CFR) highlighted:  
  - Large outbreaks in **US, Brazil, India, Russia, and Europe**.  
  - Higher CFR clusters in **Europe and parts of Latin America**.  

üìä *Insight:* Outbreak magnitude and fatality burden were geographically uneven.

---

## üìä Top Countries Dashboard
A **comparative dashboard** of the top countries illustrated:  
- **Confirmed Cases:** The US far exceeded other countries.  
- **Deaths:** The US and Brazil dominated.  
- **Fatality Rate:** Mexico stood out with the highest CFR.  
- **Recovery Rate:** Chile and Peru showed the strongest recovery performance.

üìä *Insight:* This dashboard provides a quick view of both absolute impact (cases, deaths) and proportional outcomes (CFR, recovery).

---

## üìù Conclusion
This early-pandemic analysis (Jan‚ÄìJuly 2020) reveals key findings:
- Global deaths escalated sharply, with the US and Brazil bearing the heaviest toll.  
- CFR stabilized around **3‚Äì5%**, while recovery rates steadily improved.  
- Regional disparities were evident: **Europe showed high mortality**, while **Asia displayed stronger recoveries**.  
- Data gaps (notably missing recoveries for some countries) limited full comparability.  

### üîÆ Next Steps
- Extend analysis with updated datasets (Johns Hopkins, Our World in Data) to include **later waves (Delta, Omicron)**.  
- Incorporate **vaccination, testing, and hospital data** for richer insights.  
- Build an **interactive dashboard (Plotly, Tableau, or Power BI)** for real-time exploration.  

---
"""